{"version":3,"file":"static/js/556.b2fd8883.chunk.js","mappings":"gOACA,EAAqC,sCAArC,EAAgG,sCAAhG,EAAqJ,gCAArJ,EAA0M,sCAA1M,EAAmQ,oCAAnQ,EAAoT,8BAApT,EAAgW,+BAAhW,EAA+Y,iCAA/Y,EAA6b,8BAA7b,EAAwe,8BAAxe,EAAmhB,8BAAnhB,EAA4jB,4BAA5jB,EAA8mB,uCAA9mB,EAAqqB,iCAArqB,EAAmtB,8B,qECQtsBA,EAAY,WACrB,IAAMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,MACAC,EAAAA,EAAAA,YAAU,WACFV,GACAG,EAAS,IAEhB,GAAE,CAACH,EAAQG,IACZ,IAGMQ,EAAmBC,EAAAA,GAAW,CAChCC,MAAOD,EAAAA,KACFC,MAAM,2BACNC,SAAS,4BACdC,SAAUH,EAAAA,KACLI,IAAI,EAAG,2CACPC,IAAI,GAAI,oDACRH,SAAS,kCAEZI,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXP,MAAO,GACPE,SAAU,IAEdJ,iBAAAA,EACAU,SAAU,SAACC,GACPjB,GAASkB,EAAAA,EAAAA,IAAM,CAAEV,MAAOS,EAAOT,MAAOE,SAAUO,EAAOP,WAC1D,IAIL,OACI,8BACI,gBAAKS,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,EAAhB,UACI,4BAEI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UAA8B,gBAAKC,UAAWC,EAAAA,EAAQ,aAAcH,UAAWC,OAC/E,eAAID,UAAWC,EAAf,SAA+B,oBAEnC,kBAAMD,UAAWC,EAAgBJ,SAAUH,EAAOU,aAAlD,WACI,iBAAKJ,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAjB,UAAiC,gBAAKD,UAAWC,EAAhB,UAAgC,gBAAKC,UAAWC,EAAAA,EAAQ,qBACzF,kBACIE,KAAK,QACLC,KAAK,QACLC,YAAY,SACZC,aAAa,WACbR,UAAWC,EACXQ,MAAOf,EAAOI,OAAOT,MACrBqB,SAAUhB,EAAOiB,aACjBC,OAAQlB,EAAOmB,aAElBnB,EAAOoB,QAAQzB,OAASK,EAAOqB,OAAO1B,OACnC,gBAAKW,UAAWC,EAAhB,SAAoCP,EAAOqB,OAAO1B,QAClD,SAER,iBAAKW,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAjB,UAAiC,gBAAKD,UAAWC,EAAhB,UAAgC,gBAAKC,UAAWC,EAAAA,EAAQ,wBACzF,kBAAOE,KAAMrB,EAAe,OAAS,WACjCsB,KAAK,WACLC,YAAY,WACZC,aAAa,mBACbR,UAAWC,EACXQ,MAAOf,EAAOI,OAAOP,SACrBmB,SAAUhB,EAAOiB,aACjBC,OAAQlB,EAAOmB,cAEnB,iBAAMb,UAAWC,EAAwBe,QA9D1C,WACvB/B,GAAgB,SAAAgC,GAAS,OAAKA,CAAL,GAC5B,EA4D2B,UACI,0BACI,gBAAKf,UAAWlB,EAAemB,EAAAA,EAAQ,YAAcA,EAAAA,EAAQ,yBAGpET,EAAOoB,QAAQvB,UAAYG,EAAOqB,OAAOxB,UACtC,gBAAKS,UAAWC,EAAhB,SAAoCP,EAAOqB,OAAOxB,WAClD,SAER,SAAC,KAAD,CAAM2B,GAAG,IAAIlB,UAAWC,EAAwBe,QAAStB,EAAOU,aAAhE,UAA8E,mBAAQC,KAAK,SAASL,UAAWC,EAAjC,SAA0D,iBAE5I,SAAC,KAAD,CAAMiB,GAAG,YAAYlB,UAAWC,EAAhC,SAAsD,qBAM7E,EC5FD,EAHkB,WAChB,OAAO,SAAC1B,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","page/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login_page_wrapper\":\"LoginForm_login_page_wrapper__qdvGW\",\"show_hide_password\":\"LoginForm_show_hide_password__UC-pH\",\"page_content\":\"LoginForm_page_content__doH87\",\"login_colored_link\":\"LoginForm_login_colored_link__SkvDp\",\"login_white_link\":\"LoginForm_login_white_link__JmAMV\",\"login_form\":\"LoginForm_login_form__5NzpT\",\"login_input\":\"LoginForm_login_input__rFAz0\",\"input_wrapper\":\"LoginForm_input_wrapper__IumGk\",\"input_icon\":\"LoginForm_input_icon__bweIY\",\"logo_title\":\"LoginForm_logo_title__o3Nb3\",\"logo_login\":\"LoginForm_logo_login__ASHYy\",\"logo_svg\":\"LoginForm_logo_svg__9fje2\",\"login_submit_button\":\"LoginForm_login_submit_button__kNgRs\",\"error_message\":\"LoginForm_error_message__LJK-x\",\"svg_sizing\":\"LoginForm_svg_sizing__PBlpf\",\"wrapper\":\"LoginForm_wrapper__Q4oyG\"};","import React, { useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport css from './LoginForm.module.css'\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport icons from '../../images/sprite.svg'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\nimport { selectIsAuth } from 'redux/auth/authSelectors';\nexport const LoginForm = () => {\n    const isAuth = useSelector(selectIsAuth)\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const [showPassword, setShowPassword] = useState(false);\n    useEffect(() => {\n        if (isAuth) {\n            navigate('/')\n        }\n    }, [isAuth, navigate])\n    const toggleShowPassword = () => {\n        setShowPassword(prevState => !prevState);\n    }\n    const validationSchema = Yup.object({\n        email: Yup.string()\n            .email('Incorrect email adress.')\n            .required('Please enter your email.'),\n        password: Yup.string()\n            .min(6, 'Password must be at least 6 characters.')\n            .max(12, 'Password should be no longer than 12 characters.')\n            .required('Please, enter your password.'),\n    })\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validationSchema,\n        onSubmit: (values) => {\n            dispatch(login({ email: values.email, password: values.password }));\n        }\n\n    })\n\n    return (\n        <section>\n            <div className={css.login_page_wrapper}>\n                <div className={css.page_content}>\n                    <div>\n\n                        <div className={css.logo_login}>\n                            <svg className={css.logo_svg}><use xlinkHref={icons + '#icon-logo'} className={css.logo_svg} /></svg>\n                            <h1 className={css.logo_title}>Money Guard</h1>\n                        </div>\n                        <form className={css.login_form} onSubmit={formik.handleSubmit}>\n                            <div className={css.input_wrapper}>\n                                <span className={css.input_icon}><svg className={css.svg_sizing}><use xlinkHref={icons + '#icon-email'} /></svg></span>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"E-mail\"\n                                    autoComplete=\"username\"\n                                    className={css.login_input}\n                                    value={formik.values.email}\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                />\n                                {formik.touched.email && formik.errors.email ? (\n                                    <div className={css.error_message}>{formik.errors.email}</div>\n                                ) : null}\n                            </div>\n                            <div className={css.input_wrapper}>\n                                <span className={css.input_icon}><svg className={css.svg_sizing}><use xlinkHref={icons + '#icon-password'} /></svg></span>\n                                <input type={showPassword ? \"text\" : \"password\"}\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    autoComplete=\"current-password\"\n                                    className={css.login_input}\n                                    value={formik.values.password}\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                />\n                                <span className={css.show_hide_password} onClick={toggleShowPassword}>\n                                    <svg>\n                                        <use xlinkHref={showPassword ? icons + \"#icon-eye\" : icons + \"#icon-eye-closed\"}></use>\n                                    </svg>\n                                </span>\n                                {formik.touched.password && formik.errors.password ? (\n                                    <div className={css.error_message}>{formik.errors.password}</div>\n                                ) : null}\n                            </div>\n                            <Link to='/' className={css.login_colored_link} onClick={formik.handleSubmit}><button type='submit' className={css.login_submit_button}>Log in</button></Link>\n                        </form>\n                        <Link to='/register' className={css.login_white_link}>Register</Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\nexport default LoginPage;\n"],"names":["LoginForm","isAuth","useSelector","selectIsAuth","navigate","useNavigate","dispatch","useDispatch","useState","showPassword","setShowPassword","useEffect","validationSchema","Yup","email","required","password","min","max","formik","useFormik","initialValues","onSubmit","values","login","className","css","xlinkHref","icons","handleSubmit","type","name","placeholder","autoComplete","value","onChange","handleChange","onBlur","handleBlur","touched","errors","onClick","prevState","to"],"sourceRoot":""}