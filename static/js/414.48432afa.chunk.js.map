{"version":3,"file":"static/js/414.48432afa.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","page/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"indicator\":\"RegistrationForm_indicator__a3wsw\",\"empty\":\"RegistrationForm_empty__cR3SB\",\"weak\":\"RegistrationForm_weak__jXmeF\",\"medium\":\"RegistrationForm_medium__LXGUN\",\"strong\":\"RegistrationForm_strong__Mokc0\",\"super_strong\":\"RegistrationForm_super_strong__boFlo\",\"login_page_wrapper\":\"RegistrationForm_login_page_wrapper__uihVP\",\"page_content\":\"RegistrationForm_page_content__hMPaO\",\"show_hide_password\":\"RegistrationForm_show_hide_password__2zIQY\",\"login_colored_link\":\"RegistrationForm_login_colored_link__FmW-z\",\"login_white_link\":\"RegistrationForm_login_white_link__MbuU5\",\"login_form\":\"RegistrationForm_login_form__UQqsP\",\"login_input\":\"RegistrationForm_login_input__0DL2D\",\"input_wrapper\":\"RegistrationForm_input_wrapper__e4TZb\",\"input_icon\":\"RegistrationForm_input_icon__3X3nK\",\"logo_title\":\"RegistrationForm_logo_title__+3Oec\",\"logo_login\":\"RegistrationForm_logo_login__WUZ83\",\"logo_svg\":\"RegistrationForm_logo_svg__QjSK3\",\"password_srtength\":\"RegistrationForm_password_srtength__B9Ooz\",\"login_submit_button\":\"RegistrationForm_login_submit_button__ZoLS5\",\"error_message\":\"RegistrationForm_error_message__zSA2P\",\"svg_sizing\":\"RegistrationForm_svg_sizing__H3M5o\",\"wrapper\":\"RegistrationForm_wrapper__G9gGa\"};","import css from './RegistrationForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { register } from 'redux/auth/authOperations';\nimport icons from '../../images/sprite.svg';\nimport { selectIsAuth } from 'redux/auth/authSelectors';\nimport { useEffect, useState } from 'react';\n\nconst calculateStrength = password => {\n  const passwordLength = password.length;\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasLowercase = /[a-z]/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n\n  if (passwordLength >= 8 && hasUppercase && hasLowercase && hasSpecialChar) {\n    return css.super_strong;\n  } else if (passwordLength >= 8 && hasUppercase && hasLowercase) {\n    return css.strong;\n  } else if (passwordLength >= 6 && (hasUppercase || hasLowercase)) {\n    return css.medium;\n  } else if (passwordLength > 0) {\n    return css.weak;\n  } else {\n    return css.empty;\n  }\n};\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(selectIsAuth)\n  const navigate = useNavigate()\n  const [showPassword, setShowPassword] = useState(false);\n  useEffect(() => {\n    if (isAuth) {\n      navigate('/')\n    }\n  }, [isAuth, navigate])\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  }\n  useEffect(() => {\n    if (isAuth) {\n      navigate('/')\n    }\n  }, [isAuth, navigate])\n\n  const onSubmit = values => {\n    dispatch(register({ email: values.email, password: values.password, username: values.username }))\n  };\n\n  const validationSchema = Yup.object({\n    username: Yup.string().required('Please enter your name'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Please enter your email'),\n    password: Yup.string()\n      .required('Please enter your password')\n      .min(6, 'Password must be at least 6 characters')\n      .max(12, 'Password should be no longer than 12 characters'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Please confirm your password'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema,\n    onSubmit,\n  });\n\n  const strengthClass = calculateStrength(formik.values.password);\n\n  return (\n    <section>\n      <div className={css.login_page_wrapper}>\n        <div className={css.page_content}>\n          <div>\n            <div className={css.logo_login}>\n              <svg className={css.logo_svg}>\n                <use\n                  xlinkHref={icons + '#icon-logo'}\n                  className={css.logo_svg}\n                />\n              </svg>\n              <h1 className={css.logo_title}>Money Guard</h1>\n            </div>\n            <form className={css.login_form} onSubmit={formik.handleSubmit}>\n              <div className={css.input_wrapper}>\n                <span className={css.input_icon}>\n                  <svg className={css.svg_sizing}>\n                    <use xlinkHref={icons + '#icon-email'} />\n                  </svg>\n                </span>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"E-mail\"\n                  autoComplete=\"username\"\n                  className={css.login_input}\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n                {formik.touched.email && formik.errors.email ? (\n                  <div className={css.error_message}>{formik.errors.email}</div>\n                ) : null}\n              </div>\n              <div className={css.input_wrapper}>\n                <span className={css.input_icon}>\n                  <svg className={css.svg_sizing}>\n                    <use xlinkHref={icons + '#icon-password'} />\n                  </svg>\n                </span>\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  autoComplete=\"current-password\"\n                  className={css.login_input}\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n                <span className={css.show_hide_password} onClick={toggleShowPassword}>\n                  <svg>\n                    <use xlinkHref={showPassword ? icons + \"#icon-eye\" : icons + \"#icon-eye-closed\"}></use>\n                  </svg>\n                </span>\n                {formik.touched.password && formik.errors.password ? (\n                  <div className={css.error_message}>\n                    {formik.errors.password}\n                  </div>\n                ) : null}\n              </div>\n              <div className={css.input_wrapper}>\n                <span className={css.input_icon}>\n                  <svg className={css.svg_sizing}>\n                    <use xlinkHref={icons + '#icon-password'} />\n                  </svg>\n                </span>\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  autoComplete=\"new-password\"\n                  className={css.login_input}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.confirmPassword}\n                />\n                <div className={css.password_srtength}>\n                  <div className={css.indicator}>\n                    <div className={strengthClass}></div>\n                  </div>\n                </div>\n                {formik.touched.confirmPassword &&\n                  formik.errors.confirmPassword ? (\n                  <div className={css.error_message}>\n                    {formik.errors.confirmPassword}\n                  </div>\n                ) : null}\n              </div>\n              <div className={css.input_wrapper}>\n                <span className={css.input_icon}>\n                  <svg className={css.svg_sizing}>\n                    <use xlinkHref={icons + '#icon-account'} />\n                  </svg>\n                </span>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"First name\"\n                  autoComplete=\"username\"\n                  className={css.login_input}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.username}\n                />\n                {formik.touched.username && formik.errors.username ? (\n                  <div className={css.error_wrapper}>\n                    <div className={css.error_message}>\n                      {formik.errors.username}\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n              <Link to=\"/\" className={css.login_colored_link} onClick={formik.handleSubmit}>\n                <button type=\"submit\" className={css.login_submit_button}>\n                  Register\n                </button>\n              </Link>\n            </form>\n            <Link to=\"/login\" className={css.login_white_link}>\n              Log In\n            </Link>\n          </div>\n        </div>\n      </div >\n    </section >\n  );\n};\n","import React from 'react';\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nconst RegistrationPage = () => {\n  return <RegistrationForm />;\n};\nexport default RegistrationPage;\n"],"names":["RegistrationForm","dispatch","useDispatch","isAuth","useSelector","selectIsAuth","navigate","useNavigate","useState","showPassword","setShowPassword","useEffect","validationSchema","Yup","username","required","email","password","min","max","confirmPassword","oneOf","formik","useFormik","initialValues","onSubmit","values","register","strengthClass","passwordLength","length","hasUppercase","test","hasLowercase","hasSpecialChar","css","calculateStrength","className","xlinkHref","icons","handleSubmit","type","name","placeholder","autoComplete","value","onChange","handleChange","onBlur","handleBlur","touched","errors","onClick","prevState","to"],"sourceRoot":""}