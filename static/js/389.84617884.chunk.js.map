{"version":3,"file":"static/js/389.84617884.chunk.js","mappings":"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","sources":["config/formattedAmount.jsx","webpack://react-homework-template/./src/components/Chart/Chart.module.css?6073","components/DiagramTab/selectService.js","components/Chart/Chart.jsx","webpack://react-homework-template/./src/components/DiagramTab/DiagramTab.module.css?8e76","components/DiagramTab/styleSelect.js","components/DiagramTab/DiagramTab.jsx","webpack://react-homework-template/./src/components/Table/Table.module.css?1202","components/Table/Table.jsx","redux/statistics/statisticsSelector.js","webpack://react-homework-template/./src/page/SummaryPage/SummaryPage.module.css?c164","page/SummaryPage/SummaryPage.jsx"],"sourcesContent":["const formattedAmount = amount => {\n  const amountValue = Math.abs(amount);\n  const formatter = new Intl.NumberFormat('uk-UA', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    useGrouping: true,\n  });\n  const formattedValue = formatter.format(amountValue).replace(',', '.');\n\n  return formattedValue;\n};\n\nexport default formattedAmount;\n","// extracted by mini-css-extract-plugin\nexport default {\"chartContainer\":\"Chart_chartContainer__tWEJk\",\"titleChart\":\"Chart_titleChart__8dvOe\",\"doughnut\":\"Chart_doughnut__ILnfa\",\"total\":\"Chart_total__Juj++\",\"iconWallet\":\"Chart_iconWallet__NnrvY\"};","export const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const options = [\n  { value: '1', label: 'January' },\n  { value: '2', label: 'February' },\n  { value: '3', label: 'March' },\n  { value: '4', label: 'April' },\n  { value: '5', label: 'May' },\n  { value: '6', label: 'June' },\n  { value: '7', label: 'July' },\n  { value: '8', label: 'August' },\n  { value: '9', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\nexport const optionsYear = [\n  { value: '2023', label: '2023' },\n  { value: '2022', label: '2022' },\n  { value: '2021', label: '2021' },\n  { value: '2020', label: '2020' },\n  { value: '2019', label: '2019' },\n];\n\nconst currentDate = new Date();\nexport const nowMonth = currentDate.getMonth() + 1;\nexport const nowYear = currentDate.getFullYear();\nexport const monthName = monthNames[currentDate.getMonth()];\n\nexport const barColors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n];\n","import { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport css from './Chart.module.css';\nimport { Doughnut } from 'react-chartjs-2';\nimport Icons from '../../images/sprite.svg';\nimport { barColors } from 'components/DiagramTab/selectService';\n\nimport formattedAmount from 'config/formattedAmount';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst Chart = ({ filteredCategories, categoryInfo }) => {\n  const xValues = filteredCategories.map(it => it.name);\n  const yValues = filteredCategories.map(it => Math.abs(it.total));\n\n  const data = {\n    labels: xValues,\n    datasets: [\n      {\n        data: yValues,\n        backgroundColor: barColors,\n        borderColor: categoryInfo.color ? categoryInfo.color : 'transparent',\n        borderWidth: 2,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  return (\n    <div className={css.chartContainer}>\n      <h2 className={css.titleChart}>Statistics</h2>\n      <div className={css.doughnut}>\n        <Doughnut\n          data={data}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            tooltips: false,\n            height: '3',\n          }}\n        />\n        {categoryInfo.sum !== 0 ? (\n          <p className={css.total}>\n            {categoryInfo.title} : <br /> &#8372;\n            {formattedAmount(categoryInfo.sum)}\n          </p>\n        ) : (\n          <svg className={css.iconWallet} width=\"175\" height=\"175\">\n            <use href={Icons + '#icon-wallet-svgrepo-com'}></use>\n          </svg>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chart;\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"DiagramTab_select__rBwIz\",\"selectContainer\":\"DiagramTab_selectContainer__3QpfX\"};","export const styleSelect = {\n  option: provided => {\n    return {\n      ...provided,\n      background: 'transparent',\n      border: 'none',\n      outline: 'none',\n\n      fontSize: '18px',\n      fontWeight: '400',\n      color: 'rgba(255, 255, 255, 0.8)',\n      backgroundColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover': {\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        color: '#FF868D',\n        fontWeight: '400',\n      },\n      textAlign: 'left',\n    };\n  },\n  control: styles => ({\n    ...styles,\n\n    color: 'var(--white, #FBFBFB)',\n    fontFamily: 'Poppins',\n    fontSize: '16px',\n    fontStyle: 'normal',\n    fontWeight: '400',\n    lineHeight: ' normal',\n    border: '1px solid rgba(255, 255, 255, 0.4)',\n    borderRadius: '8px',\n    boxShadow: 'none',\n    backgroundColor: 'rgba(74, 86, 226, 0.10)',\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...provided,\n      opacity,\n      transition,\n      right: 5,\n      color: '#FBFBFB',\n      padding: '8px 20px',\n    };\n  },\n\n  menu: (provided, state) => {\n    return {\n      ...provided,\n      background:\n        'linear-gradient(0deg,rgba(83, 61, 186, 1) 0%,rgba(80, 48, 154, 1) 36%,rgba(106, 70, 165, 1) 61%,rgba(133, 93, 175, 1) 100%)',\n      borderRadius: '8px',\n      blur: '5px',\n    };\n  },\n  menuList: base => ({\n    ...base,\n    '::-webkit-scrollbar': {\n      display: 'none',\n    },\n  }),\n\n  indicatorSeparator: () => ({}),\n\n  indicators: () => {\n    return {\n      cursor: 'pointer',\n    };\n  },\n\n  dropdownIndicator: provided => {\n    return {\n      ...provided,\n      color: 'rgba(255, 255, 255, 0.4)',\n      '&:hover': {\n        color: '#fbfbfb',\n      },\n    };\n  },\n\n  input: provided => {\n    return {\n      ...provided,\n      margin: '0px',\n      color: '#FBFBFB',\n      padding: '12px 20px',\n\n      minWidth: '100%',\n    };\n  },\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsAuth } from 'redux/auth/authSelectors';\nimport { getTransactions } from 'redux/statistics/statisticsOperation';\nimport css from './DiagramTab.module.css';\nimport Select from 'react-select';\nimport { styleSelect } from './styleSelect';\nimport {\n  monthName,\n  nowMonth,\n  nowYear,\n  options,\n  optionsYear,\n} from './selectService';\n\nconst StatisticsSelect = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(selectIsAuth);\n\n  const [optionMonth, setOptionMonth] = useState({\n    value: nowMonth,\n    label: monthName,\n  });\n  const [optionYear, setOptionYear] = useState({\n    value: nowYear,\n    label: nowYear,\n  });\n\n  const year = optionYear.value;\n  const month = optionMonth.value;\n\n  useEffect(() => {\n    isAuth &&\n      dispatch(\n        getTransactions({\n          month,\n\n          year,\n        })\n      );\n  }, [dispatch, month, year, isAuth]);\n\n  return (\n    <div className={css.selectContainer}>\n      <Select\n        className={css.select}\n        options={options}\n        styles={styleSelect}\n        defaultValue={optionMonth}\n        onChange={setOptionMonth}\n        name=\"optionsMonth\"\n        id=\"month-select\"\n      ></Select>\n\n      <Select\n        className={css.select}\n        styles={styleSelect}\n        defaultValue={optionYear}\n        options={optionsYear}\n        onChange={setOptionYear}\n        name=\"optionYear\"\n        id=\"years-select\"\n      ></Select>\n    </div>\n  );\n};\n\nexport default StatisticsSelect;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleList\":\"Table_titleList__HtgQ4\",\"tableContainer\":\"Table_tableContainer__Fbu-g\",\"itemList\":\"Table_itemList__0mDVC\",\"colorBox\":\"Table_colorBox__ssgAh\",\"sum\":\"Table_sum__oTEGm\",\"sumarry\":\"Table_sumarry__qJdGD\",\"sumarryIncome\":\"Table_sumarryIncome__Z-da7\",\"expense\":\"Table_expense__RzoO0\",\"expenseHover\":\"Table_expenseHover__lg2wG\",\"sumarryExpense\":\"Table_sumarryExpense__kFIbU\",\"income\":\"Table_income__jdvuT\",\"textStyle\":\"Table_textStyle__OYAZp\",\"titleCategory\":\"Table_titleCategory__YAiLV\",\"tableBtn\":\"Table_tableBtn__HhSLt\"};","import React from 'react';\nimport css from './Table.module.css';\nimport { barColors } from 'components/DiagramTab/selectService';\nimport formattedAmount from 'config/formattedAmount';\n\nconst Table = ({ transactions, filteredCategories, handleClick }) => {\n  const { incomeSummary, expenseSummary } = transactions;\n\n  return (\n    <div className={css.tableContainer}>\n      <div className={css.titleList}>\n        <p className={css.textStyle}>Category</p>\n        <p className={css.textStyle}>Sum</p>\n      </div>\n      <ul className={css.categoryList}>\n        {filteredCategories.map((it, idx) => (\n          <li\n            onClick={() => {\n              handleClick({\n                sum: it.total,\n                title: it.name,\n                color: barColors[idx],\n              });\n            }}\n            className={css.itemList}\n            key={it.name}\n          >\n            <span\n              style={{ backgroundColor: barColors[idx] }}\n              className={css.colorBox}\n            ></span>\n\n            <p className={css.titleCategory}>{it.name}</p>\n\n            <p className={`${css.sum} ${css.titleCategory}`}>\n              {formattedAmount(it.total)}\n            </p>\n          </li>\n        ))}\n      </ul>\n      <div\n        className={css.expenseHover}\n        onClick={() =>\n          handleClick({\n            sum: expenseSummary,\n            title: 'Expense',\n          })\n        }\n      >\n        <p className={`${css.sumarry} ${css.sumarryExpense}`}>\n          Expenses:\n          <span className={css.expense}>{formattedAmount(expenseSummary)}</span>\n        </p>\n      </div>\n      <p className={`${css.sumarry} ${css.sumarryIncome}`}>\n        Income:{' '}\n        <span className={css.income}>{formattedAmount(incomeSummary)}</span>\n      </p>\n    </div>\n  );\n};\nexport default Table;\n","export const selectTransactions = state => state.statistics.transactions;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SummaryPage_wrapper__HXv87\"};","import Chart from 'components/Chart/Chart';\nimport StatisticsSelect from 'components/DiagramTab/DiagramTab';\nimport Table from 'components/Table/Table';\nimport { useSelector } from 'react-redux';\nimport { selectTransactions } from 'redux/statistics/statisticsSelector';\nimport css from './SummaryPage.module.css';\nimport { useEffect, useState } from 'react';\n\nconst SummaryPage = () => {\n  const transactions = useSelector(selectTransactions);\n  const [element, setElement] = useState({\n    title: '',\n    sum: 0,\n  });\n  useEffect(() => {\n    setElement({\n      title: 'Expense',\n      sum: Math.abs(transactions.expenseSummary),\n    });\n  }, [transactions]);\n\n  const { categoriesSummary } = transactions;\n\n  const filteredCategories = categoriesSummary.filter(\n    category => category.name !== 'Income'\n  );\n\n  const handleClick = ({ title, sum, color }) => {\n    setElement({ title, sum, color });\n  };\n  return (\n    <>\n      <div className={css.wrapper}>\n        <Chart\n          categoryInfo={element}\n          transactions={transactions}\n          filteredCategories={filteredCategories}\n        />\n        <div>\n          <StatisticsSelect />\n          <Table\n            handleClick={info => handleClick(info)}\n            transactions={transactions}\n            filteredCategories={filteredCategories}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SummaryPage;\n"],"names":["amount","amountValue","Math","abs","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","useGrouping","format","replace","options","value","label","optionsYear","currentDate","Date","nowMonth","getMonth","nowYear","getFullYear","monthName","barColors","ChartJS","ArcElement","Tooltip","filteredCategories","categoryInfo","data","labels","map","it","name","datasets","total","backgroundColor","borderColor","color","borderWidth","cutout","className","css","responsive","maintainAspectRatio","tooltips","height","sum","title","formattedAmount","width","href","Icons","styleSelect","option","provided","background","border","outline","fontSize","fontWeight","cursor","textAlign","control","styles","fontFamily","fontStyle","lineHeight","borderRadius","boxShadow","singleValue","state","opacity","isDisabled","transition","right","padding","menu","blur","menuList","base","display","indicatorSeparator","indicators","dropdownIndicator","input","margin","minWidth","dispatch","useDispatch","isAuth","useSelector","selectIsAuth","useState","optionMonth","setOptionMonth","optionYear","setOptionYear","year","month","useEffect","getTransactions","defaultValue","onChange","id","transactions","handleClick","incomeSummary","expenseSummary","idx","onClick","style","selectTransactions","statistics","element","setElement","categoriesSummary","filter","category","info"],"sourceRoot":""}